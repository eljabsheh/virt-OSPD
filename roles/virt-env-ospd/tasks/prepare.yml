---
# file: roles/virt-env-ospd/tasks/prepare.yml
- name: Set authorized key for self
  authorized_key:
    user: "{{ ansible_user_id }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"

- name: Installing required packages
  package:
    name={{ item }}
    state=latest
  with_items: "{{ virt_env_ospd_packages }}"

- name: Generating the Linux bridge(s) config file
  template:
    src=etc/libvirt/qemu/networks/default.xml
    dest=/root/default.xml

- name: Creating Default Linux bridge (virbr0)
  shell:
    if ! brctl show | grep -q virbr0 ; then virsh net-define /root/default.xml ; virsh net-start default ; virsh net-autostart default; fi
  changed_when: false

- name: Generating the Linux bridge(s) config file
  template:
    src=etc/sysconfig/network-scripts/ifcfg-bridge
    dest=/etc/sysconfig/network-scripts/ifcfg-{{ item }}
  with_items: "{{ virt_env_ospd_bridges }}"

- name: Creating Overcloud Linux bridge(s)
  shell:
    if ! brctl show | grep -q {{ item }}; then brctl addbr {{ item }}; ip l set {{ item }} up; fi
  with_items: "{{ virt_env_ospd_bridges }}"
  changed_when: false

- name: Enabling nested for KVM module
  copy:
    src=etc/modprobe.d/kvm_intel.conf
    dest=/etc/modprobe.d/kvm_intel.conf

- name: Reloading module (if no KVM are running)
  shell:
    if ! grep -q Y /sys/module/kvm_intel/parameters/nested; then rmmod kvm_intel; modprobe kvm_intel; fi
  changed_when: false

- name: Starting tuned service
  service:
    name=tuned
    state=restarted
    enabled=yes

- name: Activating virtual-host tuned profile
  shell:
    if [ $(tuned-adm active | awk '{ print $NF }') != 'virtual-host' ]; then tuned-adm profile virtual-host; fi
  changed_when: false
  when: virt_env_ospd_tuned is defined and
        virt_env_ospd_tuned

